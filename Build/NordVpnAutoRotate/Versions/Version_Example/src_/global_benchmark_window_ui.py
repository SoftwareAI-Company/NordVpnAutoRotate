# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'global_benchmark_window.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_GlobalBenchmarkWindow(object):
    def setupUi(self, GlobalBenchmarkWindow):
        GlobalBenchmarkWindow.setObjectName("GlobalBenchmarkWindow")
        GlobalBenchmarkWindow.resize(375, 254)
        GlobalBenchmarkWindow.setStyleSheet("/* style.qss */\n"
"QWidget {\n"
"    background-color: #2E3440;\n"
"    color: #D8DEE9;\n"
"}\n"
"\n"
"QPushButton {\n"
"    background-color: #4C566A;\n"
"    border: 1px solid #434C5E;\n"
"    color: #D8DEE9;\n"
"    padding: 5px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #5E81AC;\n"
"}\n"
"\n"
"QLabel {\n"
"    color: #D8DEE9;\n"
"    font-size: 16px;\n"
"}\n"
"\n"
"QLineEdit {\n"
"    background-color: #3B4252;\n"
"    border: 1px solid #4C566A;\n"
"    color: #D8DEE9;\n"
"    padding: 5px;\n"
"    border-radius: 5px;\n"
"}\n"
"")
        self.verticalLayout = QtWidgets.QVBoxLayout(GlobalBenchmarkWindow)
        self.verticalLayout.setObjectName("verticalLayout")
        self.label = QtWidgets.QLabel(GlobalBenchmarkWindow)
        self.label.setMinimumSize(QtCore.QSize(0, 146))
        self.label.setMaximumSize(QtCore.QSize(357, 153))
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap("ui/logo2.jpg"))
        self.label.setScaledContents(True)
        self.label.setIndent(0)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label, 0, QtCore.Qt.AlignHCenter)
        self.totalRotationsLabel = QtWidgets.QLabel(GlobalBenchmarkWindow)
        self.totalRotationsLabel.setObjectName("totalRotationsLabel")
        self.verticalLayout.addWidget(self.totalRotationsLabel)
        self.timeSpentLabel = QtWidgets.QLabel(GlobalBenchmarkWindow)
        self.timeSpentLabel.setObjectName("timeSpentLabel")
        self.verticalLayout.addWidget(self.timeSpentLabel)
        self.mostUsedLocationsLabel = QtWidgets.QLabel(GlobalBenchmarkWindow)
        self.mostUsedLocationsLabel.setObjectName("mostUsedLocationsLabel")
        self.verticalLayout.addWidget(self.mostUsedLocationsLabel)

        self.retranslateUi(GlobalBenchmarkWindow)
        QtCore.QMetaObject.connectSlotsByName(GlobalBenchmarkWindow)

    def retranslateUi(self, GlobalBenchmarkWindow):
        _translate = QtCore.QCoreApplication.translate
        GlobalBenchmarkWindow.setWindowTitle(_translate("GlobalBenchmarkWindow", "Global Benchmark Information"))
        self.totalRotationsLabel.setText(_translate("GlobalBenchmarkWindow", "Total Rotations (Global):"))
        self.timeSpentLabel.setText(_translate("GlobalBenchmarkWindow", "Time in Application (Global):"))
        self.mostUsedLocationsLabel.setText(_translate("GlobalBenchmarkWindow", "Most Used Locations (Global):"))

    def update_most_used_locations(self, locations):
        if not locations:
            self.mostUsedLocationsLabel.setText("Most Used Locations (Global): No data available")
            return

        table_html = "<table border='1' style='border-collapse: collapse; width: 100%;'>"
        table_html += "<tr><th>Location</th><th>Count</th></tr>"
        for location, count in locations.items():
            table_html += f"<tr><td>{location}</td><td>{count}</td></tr>"
        table_html += "</table>"
        self.mostUsedLocationsLabel.setText(f"Most Used Locations (Global):<br>{table_html}")



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    GlobalBenchmarkWindow = QtWidgets.QWidget()
    ui = Ui_GlobalBenchmarkWindow()
    ui.setupUi(GlobalBenchmarkWindow)
    GlobalBenchmarkWindow.show()
    sys.exit(app.exec_())
